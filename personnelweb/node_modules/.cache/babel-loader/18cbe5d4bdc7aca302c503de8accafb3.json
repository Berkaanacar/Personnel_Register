{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\berka\\\\Desktop\\\\PersonnelRegister\\\\personnelweb\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\nimport { FormGroup, Input, Label } from 'reactstrap';\nimport Select from 'react-select';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [city, setCity] = useState([]);\n  const [district, setDistrict] = useState([]);\n  const [refresh, setRefresh] = useState(false);\n  const [type, setType] = useState([]);\n  const [districtFilt, setDistrictFilt] = useState([]);\n  const [addressType, setAddressType] = useState([]);\n  const [personalData, setPersonalData] = useState([]);\n  const [employee, setEmployee] = useState({\n    employee_name: \"\",\n    employee_surname: \"\",\n    employee_birthday: \"\",\n    employee_birthplace: \"\",\n    city_id: \"\",\n    district_id: \"\",\n    address_type_id: \"\"\n  });\n  const [name, setName] = useState(\"Yasin\");\n  useEffect(() => {\n    axios.get('http://127.0.0.1:8000/api/getemployee').then(response => {\n      setPersonalData(response.data.employee);\n      setCity(response.data.city);\n      setDistrict(response.data.district);\n      setAddressType(response.data.type);\n      console.log(response.data.district);\n    });\n  }, [refresh]);\n\n  const onChangeCity = e => {\n    console.log(e);\n    setDistrictFilt(district.filter(district => e.value === district.city_id));\n    setEmployee(value => ({ ...value,\n      city_id: e.value\n    }));\n    console.log(\"asdsad\");\n    setRefresh(!refresh);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-6\",\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"name\",\n            children: \"Please enter name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"email\",\n            name: \"email\",\n            placeholder: \"Please enter name\",\n            value: employee.employee_name,\n            onChange: e => setEmployee(value => ({ ...value,\n              employee_name: e.target.value\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"surname\",\n            children: \"Please enter surname\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            name: \"text\",\n            placeholder: \"with a placeholder\",\n            value: employee.employee_surname,\n            onChange: e => setEmployee(value => ({ ...value,\n              employee_surname: e.target.value\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"birthday\",\n            children: \"Please enter birth day\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"date\",\n            name: \"birthday\",\n            placeholder: \"with a placeholder\",\n            value: employee.employee_birthday,\n            onChange: e => setEmployee(value => ({ ...value,\n              employee_birthday: e.target.value\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"birthplace\",\n            children: \"Please enter birthplace\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            name: \"birthplace\",\n            placeholder: \"with a placeholder\",\n            value: employee.employee_birthplace,\n            onChange: e => setEmployee(value => ({ ...value,\n              employee_birthplace: e.target.value\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-6\",\n          children: [/*#__PURE__*/_jsxDEV(Select, {\n            options: city,\n            onChange: () => onChangeCity()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            options: districtFilt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            options: type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"9PjKJmbPWWeJ4zlIeez9S5j/BDU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/berka/Desktop/PersonnelRegister/personnelweb/src/App.js"],"names":["React","useEffect","useState","FormGroup","Input","Label","Select","axios","App","city","setCity","district","setDistrict","refresh","setRefresh","type","setType","districtFilt","setDistrictFilt","addressType","setAddressType","personalData","setPersonalData","employee","setEmployee","employee_name","employee_surname","employee_birthday","employee_birthplace","city_id","district_id","address_type_id","name","setName","get","then","response","data","console","log","onChangeCity","e","filter","value","target"],"mappings":"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","sourcesContent":["import './App.css';\n\nimport React, { useEffect, useState } from 'react';\nimport { FormGroup, Input, Label } from 'reactstrap';\nimport Select from 'react-select';\n\nimport axios from 'axios';\n\nfunction App() {\n  const [city, setCity] = useState([]);\n  const [district, setDistrict] = useState([]);\n  const [refresh, setRefresh] = useState(false);\n  const [type, setType] = useState([]);\n  const [districtFilt, setDistrictFilt] = useState([]);\n  const [addressType, setAddressType] = useState([]);\n  const [personalData, setPersonalData] = useState([]);\n  const [employee, setEmployee] = useState({\n    employee_name: \"\",\n    employee_surname: \"\",\n    employee_birthday: \"\",\n    employee_birthplace: \"\",\n    city_id: \"\",\n    district_id: \"\",\n    address_type_id: \"\",\n\n  });\n  const [name, setName] = useState(\"Yasin\")\n\n  useEffect(() => {\n    axios.get('http://127.0.0.1:8000/api/getemployee').then((response) => {\n      setPersonalData(response.data.employee);\n      setCity(response.data.city);\n      setDistrict(response.data.district);\n      setAddressType(response.data.type);\n      console.log(response.data.district);\n    })\n  }, [refresh])\n\n  const onChangeCity = (e) => {\n    console.log(e);\n    setDistrictFilt(district.filter((district) => e.value === district.city_id));\n    setEmployee((value) => ({ ...value, city_id: e.value }));\n    console.log(\"asdsad\");\n    setRefresh(!refresh);\n  }\n\n\n\n\n\n  return (\n    <div className='container'>\n\n      <div className='row'>\n        <div className='col-lg-6'>\n\n          <FormGroup>\n            <Label for=\"name\">Please enter name</Label>\n            <Input type=\"email\" name=\"email\" placeholder=\"Please enter name\" value={employee.employee_name} onChange={(e) => setEmployee((value) => ({ ...value, employee_name: e.target.value }))} />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"surname\">Please enter surname</Label>\n            <Input type=\"text\" name=\"text\" placeholder=\"with a placeholder\" value={employee.employee_surname} onChange={(e) => setEmployee((value) => ({ ...value, employee_surname: e.target.value }))} />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"birthday\">Please enter birth day</Label>\n            <Input type=\"date\" name=\"birthday\" placeholder=\"with a placeholder\" value={employee.employee_birthday} onChange={(e) => setEmployee((value) => ({ ...value, employee_birthday: e.target.value }))} />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"birthplace\">Please enter birthplace</Label>\n            <Input type=\"text\" name=\"birthplace\" placeholder=\"with a placeholder\" value={employee.employee_birthplace} onChange={(e) => setEmployee((value) => ({ ...value, employee_birthplace: e.target.value }))} />\n          </FormGroup>\n          <div className='col-lg-6'>\n            <Select options={city} onChange={() => onChangeCity()} />\n            <Select options={districtFilt} />\n            <Select options={type} />\n          </div>\n        </div>\n        <button className='btn btn-success'>Save</button>\n      </div>\n\n    </div>\n\n\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}